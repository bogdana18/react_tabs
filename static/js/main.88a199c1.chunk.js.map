{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","tabSelected","tabId","find","tab","id","className","map","classNames","href","onClick","title","content","App","useState","selectedTab","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"uLAUaA,EAAwB,SAAC,GAI/B,IAAD,IAHJC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,YAEIC,EAAK,UAAGH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,YAA/B,aAAG,EAA4CK,GAMxD,OAJKH,IACHA,EAAQH,EAAK,GAAGM,IAIhB,gCACE,qBAAKC,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAACH,GAAD,OACR,oBAEEE,UAAWE,IACT,CACE,YAAaJ,EAAIC,KAAOH,IAJ9B,SAQE,mBACEO,KAAI,WAAML,EAAIC,IACdK,QAAS,WACHN,EAAIC,KAAOL,GACbC,EAAYG,IAJlB,SAQGA,EAAIO,SAfFP,EAAIC,WAsBjB,qBACEC,UAAU,QACV,UAAQ,cAFV,mBAIGP,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,YAJ/B,aAIG,EAA4CY,cChDxCb,EAAO,CAClB,CAAEM,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAASf,EAAK,IAApD,mBAAOgB,EAAP,KAAoBC,EAApB,KAEA,OACE,sBAAKV,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,gCAEGS,EAAYJ,SAGf,cAAC,EAAD,CACEZ,KAAMA,EACNC,cAAee,EAAYV,GAC3BJ,YAAae,QCrBrBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.88a199c1.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport Tab from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  tabSelected: React.Dispatch<React.SetStateAction<Tab>>;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  tabSelected,\n}) => {\n  let tabId = tabs.find(tab => tab.id === selectedTabId)?.id;\n\n  if (!tabId) {\n    tabId = tabs[0].id;\n  }\n\n  return (\n    <div>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => (\n            <li\n              key={tab.id}\n              className={classNames(\n                {\n                  'is-active': tab.id === tabId,\n                },\n              )}\n            >\n              <a\n                href={`#${tab.id}`}\n                onClick={() => {\n                  if (tab.id !== selectedTabId) {\n                    tabSelected(tab);\n                  }\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div\n        className=\"block\"\n        data-cy=\"tab-content\"\n      >\n        {tabs.find(tab => tab.id === selectedTabId)?.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Tabs } from './components/Tabs/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is&nbsp;\n        {selectedTab.title}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        tabSelected={setSelectedTab}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}